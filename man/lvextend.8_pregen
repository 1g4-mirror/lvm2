.TH LVEXTEND 8 "LVM TOOLS #VERSION#" "Red Hat, Inc."
.
.SH NAME
.
lvextend \(em Add space to a logical volume
.
.SH SYNOPSIS
.
.nh
.TP
\fBlvextend\fP \fIoption_args\fP \fIposition_args\fP
[ \fIoption_args\fP ]
.br
[ \fIposition_args\fP ]
.P
.na
.RS
\0\0\0\fB--alloc\fP \%\fBcontiguous\fP|\:\c
\fBcling\fP|\:\c
\fBcling_by_tags\fP|\:\c
\fBnormal\fP|\:\c
\fBanywhere\fP|\:\c
\fBinherit\fP
.br
\fB-A\fP|\fB--autobackup\fP \fBy\fP|\fBn\fP
.br
\0\0\0\fB--commandprofile\fP \fIString\fP
.br
\0\0\0\fB--config\fP \fIString\fP
.br
\fB-d\fP|\fB--debug\fP
.br
\0\0\0\fB--devices\fP \fIPV\fP
.br
\0\0\0\fB--devicesfile\fP \fIString\fP
.br
\0\0\0\fB--driverloaded\fP \fBy\fP|\fBn\fP
.br
\fB-l\fP|\fB--extents\fP [\fB+\fP]\fINumber\fP[PERCENT]
.br
\fB-f\fP|\fB--force\fP
.br
\0\0\0\fB--fs\fP \fIString\fP
.br
\0\0\0\fB--fsmode\fP \fIString\fP
.br
\fB-h\fP|\fB--help\fP
.br
\0\0\0\fB--journal\fP \fIString\fP
.br
\0\0\0\fB--lockopt\fP \fIString\fP
.br
\0\0\0\fB--longhelp\fP
.br
\fB-m\fP|\fB--mirrors\fP \fINumber\fP
.br
\fB-n\fP|\fB--nofsck\fP
.br
\0\0\0\fB--nohints\fP
.br
\0\0\0\fB--nolocking\fP
.br
\0\0\0\fB--nosync\fP
.br
\0\0\0\fB--noudevsync\fP
.br
\0\0\0\fB--poolmetadatasize\fP [\fB+\fP]\fISize\fP[m|\:UNIT]
.br
\0\0\0\fB--profile\fP \fIString\fP
.br
\fB-q\fP|\fB--quiet\fP
.br
\0\0\0\fB--reportformat\fP \%\fBbasic\fP|\:\c
\fBjson\fP|\:\c
\fBjson_std\fP
.br
\fB-r\fP|\fB--resizefs\fP
.br
\fB-L\fP|\fB--size\fP [\fB+\fP]\fISize\fP[m|\:UNIT]
.br
\fB-i\fP|\fB--stripes\fP \fINumber\fP
.br
\fB-I\fP|\fB--stripesize\fP \fISize\fP[k|\:UNIT]
.br
\fB-t\fP|\fB--test\fP
.br
\0\0\0\fB--type\fP \%\fBlinear\fP|\:\c
\fBstriped\fP|\:\c
\fBsnapshot\fP|\:\c
\fBraid\fP|\:\c
\fBmirror\fP|\:\c
\fBthin\fP|\:\c
\fBthin-pool\fP|\:\c
\fBvdo\fP|\:\c
\fBvdo-pool\fP|\:\c
\fBcache\fP|\:\c
\fBcache-pool\fP|\:\c
\fBwritecache\fP
.br
\0\0\0\fB--usepolicies\fP
.br
\fB-v\fP|\fB--verbose\fP
.br
\0\0\0\fB--version\fP
.br
\fB-y\fP|\fB--yes\fP
.br
.RE
.ad
.hy
.
.SH DESCRIPTION
.
lvextend extends the size of an LV. This requires allocating logical
extents from the VG's free physical extents. If the extension adds a new
LV segment, the new segment will use the existing segment type of the LV.
.P
Extending a copy-on-write snapshot LV adds space for COW blocks.
.P
Use \fBlvconvert\fP(8) to change the number of data images in a RAID or
mirrored LV.
.P
In the usage section below, \fB--size\fP \fISize\fP can be replaced
with \fB--extents\fP \fINumber\fP.  See both descriptions
the options section.
.
.SH USAGE
.
.nh
.na
Extend an LV by a specified size.
.P
.B lvextend
\fB-L\fP|\fB--size\fP [\fB+\fP]\fISize\fP[m|\:UNIT]
\fILV\fP
.RS
[ \fB-l\fP|\fB--extents\fP [\fB+\fP]\fINumber\fP[PERCENT] ]
.br
[ \fB-r\fP|\fB--resizefs\fP ]
.br
[ \fB-i\fP|\fB--stripes\fP \fINumber\fP ]
.br
[ \fB-I\fP|\fB--stripesize\fP \fISize\fP[k|\:UNIT] ]
.br
[ \0\0\0\fB--poolmetadatasize\fP [\fB+\fP]\fISize\fP[m|\:UNIT] ]
.br
[ \0\0\0\fB--fs\fP \fIString\fP ]
.br
[ \0\0\0\fB--fsmode\fP \fIString\fP ]
.br
[ COMMON_OPTIONS ]
.br
[ \fIPV\fP.\|.\|. ]
.RE
.
.P
\(em
.P
.
Extend an LV by specified PV extents.
.P
.B lvextend
\fILV\fP \fIPV\fP.\|.\|.
.RS
[ \fB-r\fP|\fB--resizefs\fP ]
.br
[ \fB-i\fP|\fB--stripes\fP \fINumber\fP ]
.br
[ \fB-I\fP|\fB--stripesize\fP \fISize\fP[k|\:UNIT] ]
.br
[ \0\0\0\fB--fs\fP \fIString\fP ]
.br
[ \0\0\0\fB--fsmode\fP \fIString\fP ]
.br
[ COMMON_OPTIONS ]
.RE
.
.P
\(em
.P
.
Extend a pool metadata SubLV by a specified size.
.P
.B lvextend
\fB--poolmetadatasize\fP [\fB+\fP]\fISize\fP[m|\:UNIT]
\fILV1\fP
.RS
[ \fB-i\fP|\fB--stripes\fP \fINumber\fP ]
.br
[ \fB-I\fP|\fB--stripesize\fP \fISize\fP[k|\:UNIT] ]
.br
[ COMMON_OPTIONS ]
.br
[ \fIPV\fP.\|.\|. ]
.sp
LV1 types: linear thinpool
.RE
.
.P
\(em
.P
.
Extend an LV according to a predefined policy.
.P
.B lvextend
\fB--usepolicies\fP
\fILV1\fP
.RS
[ \fB-r\fP|\fB--resizefs\fP ]
.br
[ \0\0\0\fB--fs\fP \fIString\fP ]
.br
[ \0\0\0\fB--fsmode\fP \fIString\fP ]
.br
[ COMMON_OPTIONS ]
.br
[ \fIPV\fP.\|.\|. ]
.sp
LV1 types: snapshot thinpool vdopool
.RE
.P
\(em
.P
Common options for command:
.RS
[ \fB-A\fP|\fB--autobackup\fP \fBy\fP|\fBn\fP ]
.br
[ \fB-f\fP|\fB--force\fP ]
.br
[ \fB-m\fP|\fB--mirrors\fP \fINumber\fP ]
.br
[ \fB-n\fP|\fB--nofsck\fP ]
.br
[ \0\0\0\fB--alloc\fP \%\fBcontiguous\fP|\:\c
\fBcling\fP|\:\c
\fBcling_by_tags\fP|\:\c
\fBnormal\fP|\:\c
\fBanywhere\fP|\:\c
\fBinherit\fP ]
.br
[ \0\0\0\fB--nosync\fP ]
.br
[ \0\0\0\fB--noudevsync\fP ]
.br
[ \0\0\0\fB--reportformat\fP \%\fBbasic\fP|\:\c
\fBjson\fP|\:\c
\fBjson_std\fP ]
.br
[ \0\0\0\fB--type\fP \%\fBlinear\fP|\:\c
\fBstriped\fP|\:\c
\fBsnapshot\fP|\:\c
\fBraid\fP|\:\c
\fBmirror\fP|\:\c
\fBthin\fP|\:\c
\fBthin-pool\fP|\:\c
\fBvdo\fP|\:\c
\fBvdo-pool\fP|\:\c
\fBcache\fP|\:\c
\fBcache-pool\fP|\:\c
\fBwritecache\fP ]
.RE
.P
Common options for lvm:
.RS
[ \fB-d\fP|\fB--debug\fP ]
.br
[ \fB-h\fP|\fB--help\fP ]
.br
[ \fB-q\fP|\fB--quiet\fP ]
.br
[ \fB-t\fP|\fB--test\fP ]
.br
[ \fB-v\fP|\fB--verbose\fP ]
.br
[ \fB-y\fP|\fB--yes\fP ]
.br
[ \0\0\0\fB--commandprofile\fP \fIString\fP ]
.br
[ \0\0\0\fB--config\fP \fIString\fP ]
.br
[ \0\0\0\fB--devices\fP \fIPV\fP ]
.br
[ \0\0\0\fB--devicesfile\fP \fIString\fP ]
.br
[ \0\0\0\fB--driverloaded\fP \fBy\fP|\fBn\fP ]
.br
[ \0\0\0\fB--journal\fP \fIString\fP ]
.br
[ \0\0\0\fB--lockopt\fP \fIString\fP ]
.br
[ \0\0\0\fB--longhelp\fP ]
.br
[ \0\0\0\fB--nohints\fP ]
.br
[ \0\0\0\fB--nolocking\fP ]
.br
[ \0\0\0\fB--profile\fP \fIString\fP ]
.br
[ \0\0\0\fB--version\fP ]
.RE
.hy
.ad
.
.SH OPTIONS
.
.TP
\fB--alloc\fP \%\fBcontiguous\fP|\:\c
\fBcling\fP|\:\c
\fBcling_by_tags\fP|\:\c
\fBnormal\fP|\:\c
\fBanywhere\fP|\:\c
\fBinherit\fP
Determines the allocation policy when a command needs to allocate
Physical Extents (PEs) from the VG. Each VG and LV has an allocation policy
which can be changed with vgchange/lvchange, or overridden on the
command line.
\fBnormal\fP applies common sense rules such as not placing parallel stripes
on the same PV.
\fBinherit\fP applies the VG policy to an LV.
\fBcontiguous\fP requires new PEs be placed adjacent to existing PEs.
\fBcling\fP places new PEs on the same PV as existing PEs in the same
stripe of the LV.
If there are sufficient PEs for an allocation, but normal does not
use them, \fBanywhere\fP will use them even if it reduces performance,
e.g. by placing two stripes on the same PV.
Optional positional PV args on the command line can also be used to limit
which PVs the command will use for allocation.
See \fBlvm\fP(8) for more information about allocation.
.
.TP
\fB-A\fP|\fB--autobackup\fP \fBy\fP|\fBn\fP
Specifies if metadata should be backed up automatically after a change.
Enabling this is strongly advised!
See \fBvgcfgbackup\fP(8) for more information.
.
.TP
\fB--commandprofile\fP \fIString\fP
The command profile to use for command configuration.
See \fBlvm.conf\fP(5) for more information about profiles.
.
.TP
\fB--config\fP \fIString\fP
Config settings for the command. These override \fBlvm.conf\fP(5) settings.
The String arg uses the same format as \fBlvm.conf\fP(5),
or may use section/field syntax.
See \fBlvm.conf\fP(5) for more information about config.
.
.TP
\fB-d\fP|\fB--debug\fP.\|.\|.
Set debug level. Repeat from 1 to 6 times to increase the detail of
messages sent to the log file and/or syslog (if configured).
.
.TP
\fB--devices\fP \fIPV\fP
Restricts the devices that are visible and accessible to the command.
Devices not listed will appear to be missing. This option can be
repeated, or accepts a comma separated list of devices. This overrides
the devices file.
.
.TP
\fB--devicesfile\fP \fIString\fP
A file listing devices that LVM should use.
The file must exist in \fI#DEFAULT_SYS_DIR#/devices/\fP and is managed
with the \fBlvmdevices\fP(8) command.
This overrides the \fBlvm.conf\fP(5) \fBdevices/devicesfile\fP and
\fBdevices/use_devicesfile\fP settings.
.
.TP
\fB--driverloaded\fP \fBy\fP|\fBn\fP
If set to no, the command will not attempt to use device-mapper.
For testing and debugging.
.
.TP
\fB-l\fP|\fB--extents\fP [\fB+\fP]\fINumber\fP[PERCENT]
Specifies the new size of the LV in logical extents.
The --size and --extents options are alternate methods of specifying size.
The total number of physical extents used will be
greater when redundant data is needed for RAID levels.
An alternate syntax allows the size to be determined indirectly
as a percentage of the size of a related VG, LV, or set of PVs. The
suffix \fB%VG\fP denotes the total size of the VG, the suffix \fB%FREE\fP
the remaining free space in the VG, and the suffix \fB%PVS\fP the free
space in the specified PVs.  For a snapshot, the size
can be expressed as a percentage of the total size of the origin LV
with the suffix \fB%ORIGIN\fP (\fB100%ORIGIN\fP provides space for
the whole origin).
When expressed as a percentage, the size defines an upper limit for the
number of logical extents in the new LV. The precise number of logical
extents in the new LV is not determined until the command has completed.
When the plus \fB+\fP or minus \fB-\fP prefix is used,
the value is not an absolute size, but is relative and added or subtracted
from the current size.
.
.TP
\fB-f\fP|\fB--force\fP.\|.\|.
Override various checks, confirmations and protections.
Use with extreme caution.
.
.TP
\fB--fs\fP \fIString\fP
Control file system resizing when resizing an LV.
\fBchecksize\fP: Check the fs size and reduce the LV if the fs is not
using the reduced space (fs reduce is not needed.) If the reduced space
is used by the fs, then do not resize the fs or LV, and return an error.
(checksize only applies when reducing, and does nothing for extend.)
\fBresize\fP: Resize the fs by calling the fs-specific resize command.
This may also include mounting, unmounting, or running fsck. See --fsmode to
control mounting behavior, and --nofsck to disable fsck.
\fBresize_fsadm\fP: Use the old method of calling fsadm to handle the fs
(deprecated.) Warning: this option does not prevent lvreduce from destroying
file systems that are unmounted (or mounted if prompts are skipped.)
\fBignore\fP: Resize the LV without checking for or handling a file system.
Warning: using ignore when reducing the LV size may destroy the file system.
.
.TP
\fB--fsmode\fP \fIString\fP
Control file system mounting behavior for fs resize.
\fBmanage\fP: Mount or unmount the fs as needed to resize the fs,
and attempt to restore the original mount state at the end.
\fBnochange\fP: Do not mount or unmount the fs. If mounting or unmounting
is required to resize the fs, then do not resize the fs or the LV and fail
the command.
\fBoffline\fP: Unmount the fs if it is mounted, and resize the fs while it
is unmounted. If mounting is required to resize the fs, then do not resize
the fs or the LV and fail the command.
.
.TP
\fB-h\fP|\fB--help\fP
Display help text.
.
.TP
\fB--journal\fP \fIString\fP
Record information in the systemd journal.
This information is in addition to information
enabled by the lvm.conf log/journal setting.
command: record information about the command.
output: record the default command output.
debug: record full command debugging.
.
.TP
\fB--lockopt\fP \fIString\fP
Used to pass options for special cases to lvmlockd.
See \fBlvmlockd\fP(8) for more information.
.
.TP
\fB--longhelp\fP
Display long help text.
.
.TP
\fB-m\fP|\fB--mirrors\fP \fINumber\fP
Not used.
.
.TP
\fB-n\fP|\fB--nofsck\fP
Do not perform fsck when resizing the file system with --resizefs.
.
.TP
\fB--nohints\fP
Do not use the hints file to locate devices for PVs. A command may read
more devices to find PVs when hints are not used. The command will still
perform standard hint file invalidation where appropriate.
.
.TP
\fB--nolocking\fP
Disable locking. Use with caution, concurrent commands may produce
incorrect results.
.
.TP
\fB--nosync\fP
Causes the creation of mirror, raid1, raid4, raid5 and raid10 to skip the
initial synchronization. In case of mirror, raid1 and raid10, any data
written afterwards will be mirrored, but the original contents will not be
copied. In case of raid4 and raid5, no parity blocks will be written,
though any data written afterwards will cause parity blocks to be stored.
This is useful for skipping a potentially long and resource intensive initial
sync of an empty mirror/raid1/raid4/raid5 and raid10 LV.
This option is not valid for raid6, because raid6 relies on proper parity
(P and Q Syndromes) being created during initial synchronization in order
to reconstruct proper user date in case of device failures.
raid0 and raid0_meta do not provide any data copies or parity support
and thus do not support initial synchronization.
.
.TP
\fB--noudevsync\fP
Disables udev synchronization. The process will not wait for notification
from udev. It will continue irrespective of any possible udev processing
in the background. Only use this if udev is not running or has rules that
ignore the devices LVM creates.
.
.TP
\fB--poolmetadatasize\fP [\fB+\fP]\fISize\fP[m|\:UNIT]
Specifies the new size of the pool metadata LV.
The plus prefix \fB+\fP can be used, in which case
the value is added to the current size.
.
.TP
\fB--profile\fP \fIString\fP
An alias for --commandprofile or --metadataprofile, depending
on the command.
.
.TP
\fB-q\fP|\fB--quiet\fP.\|.\|.
Suppress output and log messages. Overrides --debug and --verbose.
Repeat once to also suppress any prompts with answer 'no'.
.
.TP
\fB--reportformat\fP \%\fBbasic\fP|\:\c
\fBjson\fP|\:\c
\fBjson_std\fP
Overrides current output format for reports which is defined globally by
the report/output_format setting in \fBlvm.conf\fP(5).
\fBbasic\fP is the original format with columns and rows.
If there is more than one report per command, each report is prefixed
with the report name for identification. \fBjson\fP produces report
output in JSON format. \fBjson_std\fP produces report output in
JSON format which is more compliant with JSON standard.
See \fBlvmreport\fP(7) for more information.
.
.TP
\fB-r\fP|\fB--resizefs\fP
Resize the fs using the fs-specific resize command.
May include mounting, unmounting, or running fsck. See --fsmode to control
mounting behavior, and --nofsck to disable fsck. See --fs for more options
(--resizefs is equivalent to --fs resize.)
.
.TP
\fB-L\fP|\fB--size\fP [\fB+\fP]\fISize\fP[m|\:UNIT]
Specifies the new size of the LV.
The --size and --extents options are alternate methods of specifying size.
The total number of physical extents used will be
greater when redundant data is needed for RAID levels.
When the plus \fB+\fP or minus \fB-\fP prefix is used,
the value is not an absolute size, but is relative and added or subtracted
from the current size.
.
.TP
\fB-i\fP|\fB--stripes\fP \fINumber\fP
Specifies the number of stripes in a striped LV. This is the number of
PVs (devices) that a striped LV is spread across. Data that
appears sequential in the LV is spread across multiple devices in units of
the stripe size (see --stripesize). This does not change existing
allocated space, but only applies to space being allocated by the command.
When creating a RAID 4/5/6 LV, this number does not include the extra
devices that are required for parity. The largest number depends on
the RAID type (raid0: 64, raid10: 32, raid4/5: 63, raid6: 62), and
when unspecified, the default depends on the RAID type
(raid0: 2, raid10: 2, raid4/5: 3, raid6: 5.)
To stripe a new raid LV across all PVs by default,
see \fBlvm.conf\fP(5) \fBallocation/raid_stripe_all_devices\fP.
.
.TP
\fB-I\fP|\fB--stripesize\fP \fISize\fP[k|\:UNIT]
The amount of data that is written to one device before
moving to the next in a striped LV.
.
.TP
\fB-t\fP|\fB--test\fP
Run in test mode. Commands will not update metadata.
This is implemented by disabling all metadata writing but nevertheless
returning success to the calling function. This may lead to unusual
error messages in multi-stage operations if a tool relies on reading
back metadata it believes has changed but hasn't.
.
.TP
\fB--type\fP \%\fBlinear\fP|\:\c
\fBstriped\fP|\:\c
\fBsnapshot\fP|\:\c
\fBraid\fP|\:\c
\fBmirror\fP|\:\c
\fBthin\fP|\:\c
\fBthin-pool\fP|\:\c
\fBvdo\fP|\:\c
\fBvdo-pool\fP|\:\c
\fBcache\fP|\:\c
\fBcache-pool\fP|\:\c
\fBwritecache\fP
The LV type, also known as "segment type" or "segtype".
See usage descriptions for the specific ways to use these types.
For more information about redundancy and performance
(\fBraid\fP<N>, \fBmirror\fP, \fBstriped\fP, \fBlinear\fP)
see \fBlvmraid\fP(7).
For thin provisioning (\fBthin\fP, \fBthin-pool\fP) see \fBlvmthin\fP(7).
For performance caching (\fBcache\fP, \fBcache-pool\fP) see \fBlvmcache\fP(7).
For copy-on-write snapshots (\fBsnapshot\fP) see usage definitions.
For VDO (\fBvdo\fP) see \fBlvmvdo\fP(7).
Several commands omit an explicit type option because the type
is inferred from other options or shortcuts
(e.g. --stripes, --mirrors, --snapshot, --virtualsize,
--thin, --cache, --vdo).
Use inferred types with care because it can lead to unexpected results.
.
.TP
\fB--usepolicies\fP
Perform an operation according to the policy configured in \fBlvm.conf\fP(5)
or a profile.
.
.TP
\fB-v\fP|\fB--verbose\fP.\|.\|.
Set verbose level. Repeat from 1 to 4 times to increase the detail
of messages sent to stdout and stderr.
.
.TP
\fB--version\fP
Display version information.
.
.TP
\fB-y\fP|\fB--yes\fP
Do not prompt for confirmation interactively but always assume the
answer yes. Use with extreme caution.
(For automatic no, see -qq.)
.
.SH VARIABLES
.
.TP
.I LV
Logical Volume name.  See \fBlvm\fP(8) for valid names.
An LV positional arg generally includes the VG name and LV name, e.g. VG/LV.
LV1 indicates the LV must have a specific type, where the
accepted LV types are listed. (raid represents raid<N> type).
.
.TP
.I PV
Physical Volume name, a device path under /dev.
For commands managing physical extents, a PV positional arg
generally accepts a suffix indicating a range (or multiple ranges)
of physical extents (PEs). When the first PE is omitted, it defaults
to the start of the device, and when the last PE is omitted it defaults to end.
Start and end range (inclusive):
\fIPV\fP[\fB:\fP\fIPE\fP\fB-\fP\fIPE\fP].\|.\|.
Start and length range (counting from 0):
\fIPV\fP[\fB:\fP\fIPE\fP\fB+\fP\fIPE\fP].\|.\|.
.
.TP
.I String
See the option description for information about the string content.
.
.TP
.IR Size [UNIT]
Size is an input number that accepts an optional unit.
Input units are always treated as base two values, regardless of
capitalization, e.g. 'k' and 'K' both refer to 1024.
The default input unit is specified by letter, followed by |UNIT.
UNIT represents other possible input units:
.BR b | B
is bytes,
.BR s | S
is sectors of 512 bytes,
.BR k | K
is KiB,
.BR m | M
is MiB,
.BR g | G
is GiB,
.BR t | T
is TiB,
.BR p | P
is PiB,
.BR e | E
is EiB.
(This should not be confused with the output control --units,
where capital letters mean multiple of 1000.)
.
.SH ENVIRONMENT VARIABLES
.
See \fBlvm\fP(8) for information about environment variables used by lvm.
For example, \fBLVM_VG_NAME\fP can generally be substituted
for a required VG parameter.
