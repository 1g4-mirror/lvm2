The LVM devices file lists devices that lvm can use.  The default file is
/etc/lvm/devices/system.devices, and the lvmdevices(8) command is used to
add or remove device entries.  If the file does not exist, or if lvm.conf
includes use_devicesfile=0, then lvm will not use a devices file.

When not using a devices file, lvm will use any device on the system, and
allows the filter (in lvm.conf or on the command line) to limit the full
set of system devices.  When using a devices file, lvm does not use the
filter.

To use a device with lvm, add it to the devices file with the command
lvmdevices --adddev, and to prevent lvm from seeing or using a device,
remove it from the devices file with lvmdevices --deldev.  The
vgimportdevices(8) command adds all devices from a VG to the devices file.
Adding new devices to the devices file necessarily looks outside the
existing devices file to find the devices to add.  pvcreate and vgcreate
will also look outside the devices file to create new PVs and add them to
the devices file.

If the system devices file does not yet exist, the pvcreate or vgcreate
commands will create it if they find no existing VGs on the system.
Simply creating an empty system.devices file, e.g. with touch, will cause
subsequent commands to use it.  (An empty devices file will cause lvm to
see no devices.)

LVM records entries in the devices file using hardware-specific IDs, such
as the WWID or serial number. This avoids problems with unstable device
names, and allows lvm to find its devices without scanning headers from
other devices on the system.  Virtual device types (e.g. multipath, crypt,
md, loop) are identified with subsystem-specific ids.  When a device has
no hardware or subystem ID, lvm falls back to recording it based on the
device name. This results in less optimal behavior when the device name
changes -- lvm will scan devices outside the devices file to locate a
"missing" PV on a new device name (this only applies to devices using the
name as an ID.)

It is recommended to use lvm commands to make changes to the file to
ensure correct and consistent information.

Multiple devices files may be created, each containing different sets of
devices.  The --devicesfile <name> command line option is used to specify
which devices file the command should use.

Setting the devices file to an empty string, --devicesfile "", will cause
the command to not use a devices file.

