.TH PVMOVE 8 "LVM TOOLS #VERSION#" "Red Hat, Inc."
.
.SH NAME
.
pvmove \(em Move extents from one physical volume to another
.
.SH SYNOPSIS
.
.nh
.TP
\fBpvmove\fP \fIposition_args\fP
[ \fIoption_args\fP ]
.br
[ \fIposition_args\fP ]
.hy
.
.SH DESCRIPTION
.
pvmove moves the allocated physical extents (PEs) on a source PV to one or
more destination PVs.  You can optionally specify a source LV in which
case only extents used by that LV will be moved to free (or specified)
extents on the destination PV. If no destination PV is specified, the
normal allocation rules for the VG are used.
.P
If pvmove is interrupted for any reason (e.g. the machine crashes) then
run pvmove again without any PV arguments to restart any operations that
were in progress from the last checkpoint. Alternatively, use the abort
option at any time to abort the operation. The resulting location of LVs
after an abort depends on whether the atomic option was used.
.P
More than one pvmove can run concurrently if they are moving data from
different source PVs, but additional pvmoves will ignore any LVs already
in the process of being changed, so some data might not get moved.
.
.SH USAGE
.
.nh
.na
Move PV extents.
.P
.B pvmove
\fIPV\fP
.RS
[ \fB-A\fP|\fB--autobackup\fP \fBy\fP|\fBn\fP ]
.br
[ \fB-n\fP|\fB--name\fP \fILV\fP ]
.br
[ \0\0\0\fB--alloc\fP \%\fBcontiguous\fP|\:\c
\fBcling\fP|\:\c
\fBcling_by_tags\fP|\:\c
\fBnormal\fP|\:\c
\fBanywhere\fP|\:\c
\fBinherit\fP ]
.br
[ \0\0\0\fB--atomic\fP ]
.br
[ \0\0\0\fB--noudevsync\fP ]
.br
[ \0\0\0\fB--reportformat\fP \%\fBbasic\fP|\:\c
\fBjson\fP|\:\c
\fBjson_std\fP ]
.br
[ COMMON_OPTIONS ]
.br
[ \fIPV\fP.\|.\|. ]
.RE
.
.P
\(em
.P
.
Continue or abort existing pvmove operations.
.P
.B pvmove
.RS
[ COMMON_OPTIONS ]
.RE
.P
\(em
.P
Common options for command:
.RS
[ \fB-b\fP|\fB--background\fP ]
.br
[ \fB-i\fP|\fB--interval\fP \fINumber\fP ]
.br
[ \0\0\0\fB--abort\fP ]
.RE
.P
Common options for lvm:
.RS
[ \fB-d\fP|\fB--debug\fP ]
.br
[ \fB-h\fP|\fB--help\fP ]
.br
[ \fB-q\fP|\fB--quiet\fP ]
.br
[ \fB-t\fP|\fB--test\fP ]
.br
[ \fB-v\fP|\fB--verbose\fP ]
.br
[ \fB-y\fP|\fB--yes\fP ]
.br
[ \0\0\0\fB--commandprofile\fP \fIString\fP ]
.br
[ \0\0\0\fB--config\fP \fIString\fP ]
.br
[ \0\0\0\fB--devices\fP \fIPV\fP ]
.br
[ \0\0\0\fB--devicesfile\fP \fIString\fP ]
.br
[ \0\0\0\fB--driverloaded\fP \fBy\fP|\fBn\fP ]
.br
[ \0\0\0\fB--journal\fP \fIString\fP ]
.br
[ \0\0\0\fB--lockopt\fP \fIString\fP ]
.br
[ \0\0\0\fB--longhelp\fP ]
.br
[ \0\0\0\fB--nohints\fP ]
.br
[ \0\0\0\fB--nolocking\fP ]
.br
[ \0\0\0\fB--profile\fP \fIString\fP ]
.br
[ \0\0\0\fB--version\fP ]
.RE
.hy
.ad
.
.SH OPTIONS
.
.TP
\fB--abort\fP
Abort any pvmove operations in progress. If a pvmove was started
with the --atomic option, then all LVs will remain on the source PV.
Otherwise, segments that have been moved will remain on the
destination PV, while unmoved segments will remain on the source PV.
.
.TP
\fB--alloc\fP \%\fBcontiguous\fP|\:\c
\fBcling\fP|\:\c
\fBcling_by_tags\fP|\:\c
\fBnormal\fP|\:\c
\fBanywhere\fP|\:\c
\fBinherit\fP
Determines the allocation policy when a command needs to allocate
Physical Extents (PEs) from the VG. Each VG and LV has an allocation policy
which can be changed with vgchange/lvchange, or overridden on the
command line.
\fBnormal\fP applies common sense rules such as not placing parallel stripes
on the same PV.
\fBinherit\fP applies the VG policy to an LV.
\fBcontiguous\fP requires new PEs be placed adjacent to existing PEs.
\fBcling\fP places new PEs on the same PV as existing PEs in the same
stripe of the LV.
If there are sufficient PEs for an allocation, but normal does not
use them, \fBanywhere\fP will use them even if it reduces performance,
e.g. by placing two stripes on the same PV.
Optional positional PV args on the command line can also be used to limit
which PVs the command will use for allocation.
See \fBlvm\fP(8) for more information about allocation.
.
.TP
\fB--atomic\fP
Makes a pvmove operation atomic, ensuring that all affected LVs are
moved to the destination PV, or none are if the operation is aborted.
.
.TP
\fB-A\fP|\fB--autobackup\fP \fBy\fP|\fBn\fP
Specifies if metadata should be backed up automatically after a change.
Enabling this is strongly advised!
See \fBvgcfgbackup\fP(8) for more information.
.
.TP
\fB-b\fP|\fB--background\fP
If the operation requires polling, this option causes the command to
return before the operation is complete, and polling is done in the
background.
.
.TP
\fB--commandprofile\fP \fIString\fP
The command profile to use for command configuration.
See \fBlvm.conf\fP(5) for more information about profiles.
.
.TP
\fB--config\fP \fIString\fP
Config settings for the command. These override \fBlvm.conf\fP(5) settings.
The String arg uses the same format as \fBlvm.conf\fP(5),
or may use section/field syntax.
See \fBlvm.conf\fP(5) for more information about config.
.
.TP
\fB-d\fP|\fB--debug\fP.\|.\|.
Set debug level. Repeat from 1 to 6 times to increase the detail of
messages sent to the log file and/or syslog (if configured).
.
.TP
\fB--devices\fP \fIPV\fP
Restricts the devices that are visible and accessible to the command.
Devices not listed will appear to be missing. This option can be
repeated, or accepts a comma separated list of devices. This overrides
the devices file.
.
.TP
\fB--devicesfile\fP \fIString\fP
A file listing devices that LVM should use.
The file must exist in \fI#DEFAULT_SYS_DIR#/devices/\fP and is managed
with the \fBlvmdevices\fP(8) command.
This overrides the \fBlvm.conf\fP(5) \fBdevices/devicesfile\fP and
\fBdevices/use_devicesfile\fP settings.
.
.TP
\fB--driverloaded\fP \fBy\fP|\fBn\fP
If set to no, the command will not attempt to use device-mapper.
For testing and debugging.
.
.TP
\fB-h\fP|\fB--help\fP
Display help text.
.
.TP
\fB-i\fP|\fB--interval\fP \fINumber\fP
Report progress at regular intervals.
.
.TP
\fB--journal\fP \fIString\fP
Record information in the systemd journal.
This information is in addition to information
enabled by the lvm.conf log/journal setting.
command: record information about the command.
output: record the default command output.
debug: record full command debugging.
.
.TP
\fB--lockopt\fP \fIString\fP
Used to pass options for special cases to lvmlockd.
See \fBlvmlockd\fP(8) for more information.
.
.TP
\fB--longhelp\fP
Display long help text.
.
.TP
\fB-n\fP|\fB--name\fP \fIString\fP
Move only the extents belonging to the named LV.
.
.TP
\fB--nohints\fP
Do not use the hints file to locate devices for PVs. A command may read
more devices to find PVs when hints are not used. The command will still
perform standard hint file invalidation where appropriate.
.
.TP
\fB--nolocking\fP
Disable locking. Use with caution, concurrent commands may produce
incorrect results.
.
.TP
\fB--noudevsync\fP
Disables udev synchronization. The process will not wait for notification
from udev. It will continue irrespective of any possible udev processing
in the background. Only use this if udev is not running or has rules that
ignore the devices LVM creates.
.
.TP
\fB--profile\fP \fIString\fP
An alias for --commandprofile or --metadataprofile, depending
on the command.
.
.TP
\fB-q\fP|\fB--quiet\fP.\|.\|.
Suppress output and log messages. Overrides --debug and --verbose.
Repeat once to also suppress any prompts with answer 'no'.
.
.TP
\fB--reportformat\fP \%\fBbasic\fP|\:\c
\fBjson\fP|\:\c
\fBjson_std\fP
Overrides current output format for reports which is defined globally by
the report/output_format setting in \fBlvm.conf\fP(5).
\fBbasic\fP is the original format with columns and rows.
If there is more than one report per command, each report is prefixed
with the report name for identification. \fBjson\fP produces report
output in JSON format. \fBjson_std\fP produces report output in
JSON format which is more compliant with JSON standard.
See \fBlvmreport\fP(7) for more information.
.
.TP
\fB-t\fP|\fB--test\fP
Run in test mode. Commands will not update metadata.
This is implemented by disabling all metadata writing but nevertheless
returning success to the calling function. This may lead to unusual
error messages in multi-stage operations if a tool relies on reading
back metadata it believes has changed but hasn't.
.
.TP
\fB-v\fP|\fB--verbose\fP.\|.\|.
Set verbose level. Repeat from 1 to 4 times to increase the detail
of messages sent to stdout and stderr.
.
.TP
\fB--version\fP
Display version information.
.
.TP
\fB-y\fP|\fB--yes\fP
Do not prompt for confirmation interactively but always assume the
answer yes. Use with extreme caution.
(For automatic no, see -qq.)
.
.SH VARIABLES
.
.TP
.I PV
Physical Volume name, a device path under /dev.
For commands managing physical extents, a PV positional arg
generally accepts a suffix indicating a range (or multiple ranges)
of physical extents (PEs). When the first PE is omitted, it defaults
to the start of the device, and when the last PE is omitted it defaults to end.
Start and end range (inclusive):
\fIPV\fP[\fB:\fP\fIPE\fP\fB-\fP\fIPE\fP].\|.\|.
Start and length range (counting from 0):
\fIPV\fP[\fB:\fP\fIPE\fP\fB+\fP\fIPE\fP].\|.\|.
.
.TP
.I String
See the option description for information about the string content.
.
.TP
.IR Size [UNIT]
Size is an input number that accepts an optional unit.
Input units are always treated as base two values, regardless of
capitalization, e.g. 'k' and 'K' both refer to 1024.
The default input unit is specified by letter, followed by |UNIT.
UNIT represents other possible input units:
.BR b | B
is bytes,
.BR s | S
is sectors of 512 bytes,
.BR k | K
is KiB,
.BR m | M
is MiB,
.BR g | G
is GiB,
.BR t | T
is TiB,
.BR p | P
is PiB,
.BR e | E
is EiB.
(This should not be confused with the output control --units,
where capital letters mean multiple of 1000.)
.
.SH ENVIRONMENT VARIABLES
.
See \fBlvm\fP(8) for information about environment variables used by lvm.
For example, \fBLVM_VG_NAME\fP can generally be substituted
for a required VG parameter.
